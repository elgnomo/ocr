/*

 Titanium Cloud Module

 This module is used across three distinct platforms (iOS, Android, and Mobile Web), each with their own architectural
 demands upon it.

 Appcelerator Titanium is Copyright (c) 2009-2014 by Appcelerator, Inc.
 and licensed under the Apache Public License (version 2)

 Copyright 2008 Netflix, Inc.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

 A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 in FIPS PUB 180-1
 Version 2.1a Copyright Paul Johnston 2000 - 2002.
 Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 Distributed under the BSD License
 See http://pajhome.org.uk/crypt/md5 for details.
*/
defineCloud(exports);
function defineCloud(l) {var b;function o(b, a, e) {if (void 0 === a) throw "Argument " + b + " was not provided!";if (typeof a != e) throw "Argument " + b + " was an unexpected type! Expected: " + e + ", Received: " + typeof a;}function w(b, a, e, c) {l.debug && Ti.API.info('ACS Request: { url: "' + b + '", verb: "' + a + '", data: ' + JSON.stringify(e) + " })");h.send(b, a, e, function (a) {if (c) {var e = a.response || {};a.meta && "ok" == a.meta.status ? (e.success = !0, e.error = !1, e.meta = a.meta, l.debug && Ti.API.info(JSON.stringify(e))) : (e.success = !1, e.error =
        !0, e.code = a.meta ? a.meta.code : a.statusCode, e.message = a.meta ? a.meta.message : a.message || a.statusText, l.debug && Ti.API.error(e.code + ": " + e.message));c(e);}});}function u(b, a) {o("data", b, "object");o("callback", a, "function");x(this);this.url || (this.url = this.restNamespace + "/" + this.restMethod + ".json");w(this.url, this.verb, b, a);}function i() {u.call(this, 2 == arguments.length ? arguments[0] : {}, 2 == arguments.length ? arguments[1] : arguments[0]);}function x(b) {b.restNamespace || (b.restNamespace = b.property.toLowerCase());b.restMethod || (
    b.restMethod = b.method.toLowerCase());}function y() {var b = arguments;u.call(this, 2 == b.length ? b[0] : {}, function (a) {h.reset();(2 == b.length ? b[1] : b[0])(a);});}function v(b, a) {b[a >> 5] |= 128 << 24 - a % 32;b[(a + 64 >> 9 << 4) + 15] = a;for (var e = Array(80), c = 1732584193, g = -271733879, f = -1732584194, d = 271733878, k = -1009589776, j = 0; j < b.length; j += 16) {for (var h = c, i = g, s = f, B = d, l = k, m = 0; 80 > m; m++) {e[m] = 16 > m ? b[j + m] : (e[m - 3] ^ e[m - 8] ^ e[m - 14] ^ e[m - 16]) << 1 | (e[m - 3] ^ e[m - 8] ^ e[m - 14] ^ e[m - 16]) >>> 31;var n = c << 5 | c >>> 27,o;o = 20 > m ? g & f | ~g & d : 40 > m ? g ^ f ^ d : 60 > m ? g &
        f | g & d | f & d : g ^ f ^ d;n = p(p(n, o), p(p(k, e[m]), 20 > m ? 1518500249 : 40 > m ? 1859775393 : 60 > m ? -1894007588 : -899497514));k = d;d = f;f = g << 30 | g >>> 2;g = c;c = n;}c = p(c, h);g = p(g, i);f = p(f, s);d = p(d, B);k = p(k, l);}return [c, g, f, d, k];}function p(b, a) {var e = (b & 65535) + (a & 65535);return (b >> 16) + (a >> 16) + (e >> 16) << 16 | e & 65535;}function z(b) {for (var a = [], e = (1 << r) - 1, c = 0; c < b.length * r; c += r) a[c >> 5] |= (b.charCodeAt(c / r) & e) << 32 - r - c % 32;return a;}function n(d, a, e, c, g) {var f = !1;this.appKey = d;this.oauthKey = a;this.oauthSecret = e;this.apiBaseURL = c ? c : b.sdk.url.baseURL;
    this.authBaseURL = g ? g : b.sdk.url.authBaseURL;this.useThreeLegged = function (a) {f = a;this.oauthKey || (this.oauthKey = this.appKey);};this.isThreeLegged = function () {return f;};return this;}var t = { PROPERTY_TYPE_ONLY_LATEST: 0, PROPERTY_TYPE_SLASH_COMBINE: 1, PROPERTY_TYPE_IGNORE: 2 };t.build = function a(e, c) {var b = c.children || [],f;for (f in b) if (b.hasOwnProperty(f)) {var d = b[f],k = d.propertyTypes || c.propertyTypes || {};k.children = t.PROPERTY_TYPE_IGNORE;for (var j in c) if (c.hasOwnProperty(j)) switch (k[j] || t.PROPERTY_TYPE_ONLY_LATEST) {case t.PROPERTY_TYPE_ONLY_LATEST:d[j] =
          void 0 === d[j] ? c[j] : d[j];break;case t.PROPERTY_TYPE_SLASH_COMBINE:var h = [];c[j] && h.push(c[j]);d[j] && h.push(d[j]);d[j] = h.join("/");}d.method && !d.children ? e[d.method] = function (a) {return function () {return a.executor.apply(a, arguments);};}(d) : d.property && a(e[d.property] = {}, d);}};t.build(l, { verb: "GET", executor: u, children: [{ method: "sendRequest", executor: function (a, e) {o("params", a, "object");o("url", a.url, "string");o("method", a.method, "string");o("callback", e, "function");w(a.url, a.method, a.data ? a.data : {}, e);} },
    { method: "createX509CertificatePinningSecurityManager", executor: function (a) {var e = !0;try {var c = require("appcelerator.https");} catch (g) {Ti.API.error(g + " SecurityManager not set."), e = !1;}e && (a = c.createX509CertificatePinningSecurityManager(a), b.js.sdk.utils.setSecurityManager(a));} }, { method: "hasStoredSession", executor: function () {Ti.API.warn("Cloud.hasStoredSession has been deprecated. Use Cloud.sessionId property");return h.hasStoredSession();} }, { method: "retrieveStoredSession", executor: function () {Ti.API.warn("Cloud.retrieveStoredSession has been deprecated. Use Cloud.sessionId property");
        return h.retrieveStoredSession();} }, { property: "ACLs", children: [{ method: "create", verb: "POST" }, { method: "update", verb: "PUT" }, { method: "show" }, { method: "remove", restMethod: "delete", verb: "DELETE" }, { method: "addUser", restMethod: "add", verb: "POST" }, { method: "removeUser", restMethod: "remove", verb: "DELETE" }, { method: "checkUser", restMethod: "check" }] }, { property: "Chats", children: [{ method: "create", verb: "POST" }, { method: "query" }, { method: "remove", restMethod: "delete", verb: "DELETE" }, { method: "queryChatGroups", restMethod: "query_chat_groups",
        executor: i }, { method: "getChatGroups", restMethod: "get_chat_groups", executor: i }] }, { property: "Checkins", children: [{ method: "create", verb: "POST" }, { method: "query", executor: i }, { method: "show" }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "Clients", children: [{ method: "geolocate", executor: i }] }, { property: "Objects", executor: function (a, e) {var c;a && "object" == typeof a && (o("data.classname", a.classname, "string"), x(this), this.url = this.restNamespace + "/" + a.classname + "/" + this.restMethod + ".json", c = a.classname,
        delete a.classname);u.call(this, a, e);a.classname = c;}, children: [{ method: "create", verb: "POST" }, { method: "show" }, { method: "update", verb: "PUT" }, { method: "remove", restMethod: "delete", verb: "DELETE" }, { method: "query" }] }, { property: "Emails", restNamespace: "custom_mailer", children: [{ method: "send", verb: "POST", restMethod: "email_from_template" }] }, { property: "Events", children: [{ method: "create", verb: "POST" }, { method: "show" }, { method: "showOccurrences", restMethod: "show/occurrences" }, { method: "query", executor: i }, { method: "queryOccurrences",
        restMethod: "query/occurrences", executor: i }, { method: "search", executor: i }, { method: "searchOccurrences", restMethod: "search/occurrences", executor: i }, { method: "update", verb: "PUT" }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "Files", children: [{ method: "create", verb: "POST" }, { method: "query", executor: i }, { method: "show" }, { method: "update", verb: "PUT" }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "Friends", children: [{ method: "add", verb: "POST" }, { method: "requests", executor: i }, { method: "approve",
        verb: "PUT" }, { method: "remove", verb: "DELETE" }, { method: "search" }] }, { property: "GeoFences", restNamespace: "geo_fences", children: [{ method: "create", verb: "POST" }, { method: "update", verb: "PUT" }, { method: "remove", restMethod: "delete", verb: "DELETE" }, { method: "query" }] }, { property: "KeyValues", children: [{ method: "set", verb: "PUT" }, { method: "get" }, { method: "append", verb: "PUT" }, { method: "increment", restMethod: "incrby", verb: "PUT" }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "Likes", children: [{ method: "create",
        verb: "POST" }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "Messages", children: [{ method: "create", verb: "POST" }, { method: "reply", verb: "POST" }, { method: "show" }, { method: "showInbox", restMethod: "show/inbox", executor: i }, { method: "showSent", restMethod: "show/sent", executor: i }, { method: "showThreads", restMethod: "show/threads", executor: i }, { method: "showThread", restMethod: "show/thread" }, { method: "remove", restMethod: "delete", verb: "DELETE" }, { method: "removeThread", restMethod: "delete/thread", verb: "DELETE" }] },
    { property: "Photos", children: [{ method: "create", verb: "POST" }, { method: "show" }, { method: "search" }, { method: "query", executor: i }, { method: "update", verb: "PUT" }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "PhotoCollections", restNamespace: "collections", children: [{ method: "create", verb: "POST" }, { method: "show" }, { method: "update", verb: "PUT" }, { method: "search" }, { method: "showSubcollections", restMethod: "show/subcollections" }, { method: "showPhotos", restMethod: "show/photos" }, { method: "remove", restMethod: "delete",
        verb: "DELETE" }] }, { property: "Places", children: [{ method: "create", verb: "POST" }, { method: "search", executor: i }, { method: "show" }, { method: "update", verb: "PUT" }, { method: "remove", restMethod: "delete", verb: "DELETE" }, { method: "query", executor: i }] }, { property: "Posts", children: [{ method: "create", verb: "POST" }, { method: "show" }, { method: "query", executor: i }, { method: "update", verb: "PUT" }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "PushNotifications", restNamespace: "push_notification", verb: "POST", children: [{ method: "subscribe" },
      { method: "unsubscribe", verb: "DELETE" }, { method: "notify" }, { method: "query", verb: "GET" }, { method: "subscribeToken", restMethod: "subscribe_token" }, { method: "unsubscribeToken", restMethod: "unsubscribe_token", verb: "DELETE" }, { method: "updateSubscription", restMethod: "subscription/update", verb: "PUT" }, { method: "notifyTokens", restMethod: "notify_tokens" }, { method: "resetBadge", restMethod: "reset_badge", verb: "PUT" }, { method: "setBadge", restMethod: "set_badge", verb: "PUT", executor: i }, { method: "queryChannels", restMethod: "channels/query",
        verb: "GET", executor: i }, { method: "showChannels", restMethod: "channels/show", verb: "GET" }] }, { property: "PushSchedules", restNamespace: "push_schedules", children: [{ method: "create", restMethod: "create", verb: "POST" }, { method: "query", restMethod: "query", executor: i }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "Reviews", children: [{ method: "create", verb: "POST" }, { method: "show" }, { method: "query" }, { method: "update", verb: "PUT" }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "SocialIntegrations",
      restNamespace: "users", children: [{ method: "externalAccountLogin", restMethod: "external_account_login", verb: "POST" }, { method: "externalAccountLink", restMethod: "external_account_link", verb: "POST" }, { method: "externalAccountUnlink", restMethod: "external_account_unlink", verb: "DELETE" }, { method: "searchFacebookFriends", restNamespace: "social", restMethod: "facebook/search_friends", executor: i }] }, { property: "Statuses", children: [{ method: "create", verb: "POST" }, { method: "update", verb: "PUT" }, { method: "show" }, { method: "search" },
      { method: "query", executor: i }, { method: "remove", restMethod: "delete", verb: "DELETE" }] }, { property: "Users", children: [{ method: "create", verb: "POST" }, { method: "login", verb: "POST" }, { method: "show" }, { method: "showMe", restMethod: "show/me", executor: function (a) {u.call(this, {}, a);} }, { method: "search", executor: i }, { method: "query", executor: i }, { method: "update", verb: "PUT" }, { method: "logout", executor: y }, { method: "remove", restMethod: "delete", verb: "DELETE", executor: y }, { method: "requestResetPassword", restMethod: "request_reset_password" },
      { method: "resendConfirmation", restMethod: "resend_confirmation" }] }] });var d;null == d && (d = {});d.setProperties = function (a, e) {if (null != a && null != e) for (var c in e) a[c] = e[c];return a;};d.setProperties(d, { percentEncode: function (a) {if (null == a) return "";if (a instanceof Array) {for (var e = ""; 0 < a.length; ++a) "" != e && (e += "&"), e += d.percentEncode(a[0]);return e;}a = encodeURIComponent(a);a = a.replace(/\!/g, "%21");a = a.replace(/\*/g, "%2A");a = a.replace(/\'/g, "%27");a = a.replace(/\(/g, "%28");return a = a.replace(/\)/g, "%29");}, decodePercent: function (a) {null !=
      a && (a = a.replace(/\+/g, " "));return decodeURIComponent(a);}, getParameterList: function (a) {if (null == a) return [];if ("object" != typeof a) return d.decodeForm(a + "");if (a instanceof Array) return a;var e = [],c;for (c in a) e.push([c, a[c]]);return e;}, getParameterMap: function (a) {if (null == a) return {};if ("object" != typeof a) return d.getParameterMap(d.decodeForm(a + ""));if (a instanceof Array) {for (var e = {}, c = 0; c < a.length; ++c) {var b = a[c][0];void 0 === e[b] && (e[b] = a[c][1]);}return e;}return a;}, getParameter: function (a, e) {if (a instanceof
      Array) for (var c = 0; c < a.length; ++c) {if (a[c][0] == e) return a[c][1];} else return d.getParameterMap(a)[e];return null;}, formEncode: function (a) {for (var e = "", a = d.getParameterList(a), c = 0; c < a.length; ++c) {var b = a[c][1];null == b && (b = "");"" != e && (e += "&");e += d.percentEncode(a[c][0]) + "=" + d.percentEncode(b);}return e;}, decodeForm: function (a) {for (var e = [], a = a.split("&"), c = 0; c < a.length; ++c) {var b = a[c];if ("" != b) {var f = b.indexOf("="),h;0 > f ? (h = d.decodePercent(b), b = null) : (h = d.decodePercent(b.substring(0, f)), b = d.decodePercent(b.substring(f +
          1)));e.push([h, b]);}}return e;}, setParameter: function (a, e, c) {var b = a.parameters;if (b instanceof Array) {for (a = 0; a < b.length; ++a) b[a][0] == e && (void 0 === c ? b.splice(a, 1) : (b[a][1] = c, c = void 0));void 0 !== c && b.push([e, c]);} else b = d.getParameterMap(b), b[e] = c, a.parameters = b;}, setParameters: function (a, e) {for (var b = d.getParameterList(e), g = 0; g < b.length; ++g) d.setParameter(a, b[g][0], b[g][1]);}, completeRequest: function (a, e) {null == a.method && (a.method = "GET");var b = d.getParameterMap(a.parameters);null == b.oauth_consumer_key &&
      d.setParameter(a, "oauth_consumer_key", e.consumerKey || "");null == b.oauth_token && null != e.token && d.setParameter(a, "oauth_token", e.token);null == b.oauth_version && d.setParameter(a, "oauth_version", "1.0");null == b.oauth_timestamp && d.setParameter(a, "oauth_timestamp", d.timestamp());null == b.oauth_nonce && d.setParameter(a, "oauth_nonce", d.nonce(6));d.SignatureMethod.sign(a, e);}, setTimestampAndNonce: function (a) {d.setParameter(a, "oauth_timestamp", d.timestamp());d.setParameter(a, "oauth_nonce", d.nonce(6));}, addToURL: function (a,
    e) {newURL = a;if (null != e) {var b = d.formEncode(e);0 < b.length && (newURL = 0 > a.indexOf("?") ? newURL + "?" : newURL + "&", newURL += b);}return newURL;}, getAuthorizationHeader: function (a, e) {for (var b = 'OAuth realm="' + d.percentEncode(a) + '"', g = d.getParameterList(e), f = 0; f < g.length; ++f) {var h = g[f],k = h[0];0 == k.indexOf("oauth_") && (b += "," + d.percentEncode(k) + '="' + d.percentEncode(h[1]) + '"');}return b;}, correctTimestamp: function (a) {d.timeCorrectionMsec = 1E3 * a - new Date().getTime();}, timeCorrectionMsec: 0, timestamp: function () {var a = new Date().getTime() +
      d.timeCorrectionMsec;return Math.floor(a / 1E3);}, nonce: function (a) {for (var e = d.nonce.CHARS, b = "", g = 0; g < a; ++g) var f = Math.floor(Math.random() * e.length), b = b + e.substring(f, f + 1);return b;} });d.nonce.CHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";d.declareClass = function (a, b, c) {var d = a[b];a[b] = c;if (null != c && null != d) for (var f in d) "prototype" != f && (c[f] = d[f]);return c;};d.declareClass(d, "SignatureMethod", function () {});d.setProperties(d.SignatureMethod.prototype, { sign: function (a) {var b = this.getSignature(d.SignatureMethod.getBaseString(a));
      d.setParameter(a, "oauth_signature", b);return b;}, initialize: function (a, b) {var c;c = null != b.accessorSecret && 9 < a.length && "-Accessor" == a.substring(a.length - 9) ? b.accessorSecret : b.consumerSecret;this.key = d.percentEncode(c) + "&" + d.percentEncode(b.tokenSecret);} });d.setProperties(d.SignatureMethod, { sign: function (a, b) {var c = d.getParameterMap(a.parameters).oauth_signature_method;if (null == c || "" == c) c = "HMAC-SHA1", d.setParameter(a, "oauth_signature_method", c);d.SignatureMethod.newMethod(c, b).sign(a);}, newMethod: function (a,
    b) {var c = d.SignatureMethod.REGISTERED[a];if (null != c) {var g = new c();g.initialize(a, b);return g;}var c = Error("signature_method_rejected"),f = "";for (g in d.SignatureMethod.REGISTERED) "" != f && (f += "&"), f += d.percentEncode(g);c.oauth_acceptable_signature_methods = f;throw c;}, REGISTERED: {}, registerMethodClass: function (a, b) {for (var c = 0; c < a.length; ++c) d.SignatureMethod.REGISTERED[a[c]] = b;}, makeSubclass: function (a) {var b = d.SignatureMethod,c = function () {b.call(this);};c.prototype = new b();c.prototype.getSignature = a;return c.prototype.constructor =
      c;}, getBaseString: function (a) {var b = a.action,c = b.indexOf("?");if (0 > c) c = a.parameters;else for (var c = d.decodeForm(b.substring(c + 1)), g = d.getParameterList(a.parameters), f = 0; f < g.length; ++f) c.push(g[f]);return d.percentEncode(a.method.toUpperCase()) + "&" + d.percentEncode(d.SignatureMethod.normalizeUrl(b)) + "&" + d.percentEncode(d.SignatureMethod.normalizeParameters(c));}, normalizeUrl: function (a) {var b = d.SignatureMethod.parseUri(a),a = b.protocol.toLowerCase(),c = b.authority.toLowerCase();if ("http" == a && 80 == b.port ||
      "https" == a && 443 == b.port) {var g = c.lastIndexOf(":");0 <= g && (c = c.substring(0, g));}(b = b.path) || (b = "/");return a + "://" + c + b;}, parseUri: function (a) {for (var b = "source,protocol,authority,userInfo,user,password,host,port,relative,path,directory,file,query,anchor".split(","), a = /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@\/]*):?([^:@\/]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/.exec(a), c = {}, d = 14; d--;) c[b[d]] = a[d] || "";return c;}, normalizeParameters: function (a) {if (null == a) return "";
      for (var b = d.getParameterList(a), a = [], c = 0; c < b.length; ++c) {var g = b[c];"oauth_signature" != g[0] && a.push([d.percentEncode(g[0]) + " " + d.percentEncode(g[1]), g]);}a.sort(function (a, b) {return a[0] < b[0] ? -1 : a[0] > b[0] ? 1 : 0;});b = [];for (c = 0; c < a.length; ++c) b.push(a[c][1]);return d.formEncode(b);} });d.SignatureMethod.registerMethodClass(["PLAINTEXT", "PLAINTEXT-Accessor"], d.SignatureMethod.makeSubclass(function () {return this.key;}));d.SignatureMethod.registerMethodClass(["HMAC-SHA1", "HMAC-SHA1-Accessor"], d.SignatureMethod.makeSubclass(function (a) {A =
    "=";var b = this.key,c = z(b);16 < c.length && (c = v(c, b.length * r));for (var d = Array(16), b = Array(16), f = 0; 16 > f; f++) d[f] = c[f] ^ 909522486, b[f] = c[f] ^ 1549556828;a = v(d.concat(z(a)), 512 + a.length * r);a = v(b.concat(a), 672);c = "";for (b = 0; b < 4 * a.length; b += 3) {d = (a[b >> 2] >> 8 * (3 - b % 4) & 255) << 16 | (a[b + 1 >> 2] >> 8 * (3 - (b + 1) % 4) & 255) << 8 | a[b + 2 >> 2] >> 8 * (3 - (b + 2) % 4) & 255;for (f = 0; 4 > f; f++) c = 8 * b + 6 * f > 32 * a.length ? c + A : c + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(d >> 6 * (3 - f) & 63);}return c;}));var A = "",r = 8;n.prototype.sendRequest =
  function (a, e, c, g) {var f = b.js.sdk.utils.getAuthType(this);if (f == b.constants.unknown) g(b.constants.noAppKeyError);else {var h = this.apiBaseURL + "/" + b.sdk.url.version + "/" + a,h = f == b.constants.app_key ? h + (b.constants.keyParam + this.appKey) : h + (b.constants.oauthKeyParam + this.oauthKey);null == c && (c = {});e = e ? e.toUpperCase() : b.constants.get_method;c[b.constants.suppressCode] = "true";if (!this.isThreeLegged()) {var k = b.js.sdk.utils.getCookie(b.constants.sessionId);k || (k = this.session_id);k && (h = -1 != h.indexOf("?") ? h + ("&" +
        b.constants.sessionId + "=" + k) : h + ("?" + b.constants.sessionId + "=" + k));}if (this.isThreeLegged()) {if (!this.accessToken && (k = this.getSession())) this.accessToken = k.access_token;this.accessToken && (c[b.constants.accessToken] = this.accessToken);}k = c;if (Ti.App.analytics) {var j = k.analytics || {};j.id = Ti.Platform.createUUID();Ti.Platform.id && (j.mid = Ti.Platform.id);j.aguid = Ti.App.guid;j.event = "cloud." + a.replace(/\//g, ".").replace(/\.json/, "");j.deploytype = Ti.App.deployType || "development";j.sid = Ti.App.sessionId;k.ti_analytics =
        JSON.stringify(j);}c = b.js.sdk.utils.cleanInvalidData(c);if (a = b.js.sdk.utils.getFileObject(c)) {try {var i;i = a.toString().match(/TiFilesystemFile/) ? a.read() : a;if (!i) {g(b.constants.fileLoadError);return;}c[b.constants.file] ? (delete c[b.constants.file], c[b.constants.file] = i) : c[b.constants.photo] && (delete c[b.constants.photo], c[b.constants.photo] = i);} catch (l) {g(b.constants.fileLoadError);return;}i = {};if (f == b.constants.oauth || f == b.constants.three_legged_oauth) f = { method: e, action: h, parameters: [] }, b.js.sdk.utils.populateOAuthParameters(f.parameters,
        this.oauthKey), this.oauthSecret && d.completeRequest(f, { consumerSecret: this.oauthSecret }), i[b.constants.oauth_header] = d.getAuthorizationHeader("", f.parameters);} else if (i = {}, f == b.constants.oauth || f == b.constants.three_legged_oauth) {var f = { method: e, action: h, parameters: [] },s;for (s in c) c.hasOwnProperty(s) && f.parameters.push([s, c[s]]);b.js.sdk.utils.populateOAuthParameters(f.parameters, this.oauthKey);this.oauthSecret && d.completeRequest(f, { consumerSecret: this.oauthSecret });i[b.constants.oauth_header] = d.getAuthorizationHeader("",
        f.parameters);}b.js.sdk.utils.sendAppceleratorRequest(h, e, c, i, g, this);}};n.prototype.sendAuthRequest = function (a) {if (b.js.sdk.utils.getAuthType(this) !== b.constants.three_legged_oauth) alert("wrong authorization type!");else {var a = a || {},e = this.authBaseURL,e = e + "/oauth/authorize" + (b.constants.oauthKeyParam + this.oauthKey),e = e + (b.constants.clientIdParam + this.oauthKey),e = e + (b.constants.responseTypeParam + "token"),a = a.params || {};a.action = "login";a.url = e;var c = this,d = a.cb;d && delete a.cb;b.js.sdk.ui(a, function (a) {c.saveSession(a);
        d && d(a);});}};n.prototype.signUpRequest = function (a) {if (b.js.sdk.utils.getAuthType(this) !== b.constants.three_legged_oauth) alert("wrong authorization type!");else {var a = a || {},e = this.authBaseURL,e = e + "/users/sign_up" + (b.constants.oauthKeyParam + this.oauthKey),e = e + (b.constants.clientIdParam + this.oauthKey),a = a.params || {};a.action = "signup";a.url = e;var c = this,d = a.cb;d && delete a.cb;b.js.sdk.ui(a, function (a) {c.saveSession(a);d && d(a);});}};n.prototype.saveSession = function (a) {if (!a || !a.access_token) return this.authorized =
    !1;b.js.sdk.utils.setCookie(b.constants.accessToken, a.access_token);b.js.sdk.utils.setCookie(b.constants.expiresIn, a.expires_in);this.accessToken = a.access_token;this.expiresIn = a.expires_in;return this.authorized = !0;};n.prototype.getSession = function () {var a = {};a.access_token = b.js.sdk.utils.getCookie(b.constants.accessToken);a.expires_in = b.js.sdk.utils.getCookie(b.constants.expiresIn);if (!a.access_token) return this.authorized = !1;this.accessToken = a.access_token;this.expiresIn = a.expires_in;this.authorized =
    !0;return a;};n.prototype.clearSession = function () {b.js.sdk.utils.setCookie(b.constants.accessToken, "");b.js.sdk.utils.setCookie(b.constants.expiresIn, "");delete this.accessToken;delete this.expiresIn;this.authorized = !1;};n.prototype.checkStatus = function () {return this.getSession() ? !0 : !1;};b = void 0;b = { constants: {}, js: {} };b.js.sdk = {};b.js.sdk.utils = {};b.sdk = {};b.sdk.url = {};b.sdk.url.baseURL = "https://api.cloud.appcelerator.com";b.sdk.url.authBaseURL = "https://secure-identity.cloud.appcelerator.com";b.sdk.url.version =
  "v1";b.constants.get_method = "GET";b.constants.post_method = "POST";b.constants.put_method = "PUT";b.constants.delete_method = "DELETE";b.constants.app_key = 1;b.constants.oauth = 2;b.constants.three_legged_oauth = 3;b.constants.unknown = -1;b.constants.keyParam = "?key=";b.constants.oauthKeyParam = "?oauth_consumer_key=";b.constants.clientIdParam = "&client_id=";b.constants.redirectUriParam = "&redirect_uri=";b.constants.responseTypeParam = "&response_type=";b.constants.accessToken = "access_token";b.constants.expiresIn = "expires_in";
  b.constants.appKey = "app_key";b.constants.json = "json";b.constants.sessionId = "_session_id";b.constants.sessionCookieName = "Cookie";b.constants.responseCookieName = "Set-Cookie";b.constants.file = "file";b.constants.suppressCode = "suppress_response_codes";b.constants.response_wrapper = "response_wrapper";b.constants.photo = "photo";b.constants.method = "_method";b.constants.name = "name";b.constants.value = "value";b.constants.oauth_header = "Authorization";b.constants.noAppKeyError = { meta: { status: "fail", code: 409, message: "Application key is not provided." } };
  b.constants.fileLoadError = { meta: { status: "fail", code: 400, message: "Unable to load file" } };b.js.sdk.utils.getSessionParams = function () {var a = null,e = b.js.sdk.utils.getCookie(b.constants.sessionId);e && (a = b.constants.sessionId + "=" + e);return a;};b.js.sdk.utils.cookieMap = [];b.js.sdk.utils.cookieMap[b.constants.sessionId] = "sessionId";b.js.sdk.utils.cookieMap[b.constants.accessToken] = "accessToken";b.js.sdk.utils.cookieMap[b.constants.expiresIn] = "expiresIn";b.js.sdk.utils.securityManager = null;b.js.sdk.utils.getCookie =
  function (a) {return (a = b.js.sdk.utils.cookieMap[a]) && l[a] || null;};b.js.sdk.utils.setCookie = function (a, e) {var c = b.js.sdk.utils.cookieMap[a];c && ("" === e ? delete l[c] : l[c] = e);};b.js.sdk.utils.deleteCookie = function (a) {(a = b.js.sdk.utils.cookieMap[a]) && delete l[a];};b.js.sdk.utils.getAuthType = function (a) {if (a) {if (a.isThreeLegged()) return b.constants.three_legged_oauth;if (a.appKey) return b.constants.app_key;if (a.oauthKey && a.oauthSecret) return b.constants.oauth;}return b.constants.unknown;};b.js.sdk.utils.getFileObject =
  function (a) {if (a) for (var e in a) if (a.hasOwnProperty(e) && (e == b.constants.photo || e == b.constants.file)) return a[e];return null;};b.js.sdk.utils.cleanInvalidData = function (a) {if (a) {for (var e in a) if (a.hasOwnProperty(e)) {null == a[e] && delete a[e];if ("object" == typeof a[e]) {if (e == b.constants.photo || e == b.constants.file) continue;a[e] = JSON.stringify(a[e]);}if (!0 === a[e] || !1 === a[e]) a[e] = a[e] ? 1 : 0;}return a;}return {};};b.js.sdk.utils.uploadMessageCallback = function (a) {return a && a.data ? JSON.parse(a.data) : {};};b.js.sdk.utils.getOAuthParameters =
  function (a) {var b = "";if (a) for (var a = d.getParameterList(a), c = 0; c < a.length; ++c) {var g = a[c],f = g[0];0 == f.indexOf("oauth_") && "oauth_token" != f && (b += "&" + d.percentEncode(f) + "=" + d.percentEncode(g[1]));}0 < b.length && (b = b.substring(1));return b;};b.js.sdk.utils.populateOAuthParameters = function (a, b) {a && b && (a.push(["oauth_version", "1.0"]), a.push(["oauth_consumer_key", b]), a.push(["oauth_signature_method", "HMAC-SHA1"]), a.push(["oauth_nonce", d.nonce(15)]));};b.js.sdk.utils.sendAppceleratorRequest = function (a, e, c, g, f,
  h) {var i = Ti.Network.createHTTPClient({ timeout: 6E4, onsendstream: function (b) {l.onsendstream && l.onsendstream({ url: a, progress: b.progress });}, ondatastream: function (b) {l.ondatastream && l.ondatastream({ url: a, progress: b.progress });}, onerror: function (a) {var b = {};if (this.responseText) {var c = this.responseText;try {(c = c.trim()) && 0 < c.length && (b = JSON.parse(c));} catch (e) {b = e;}}b.message || (b.message = a.error);b.error = !0;b.statusText = this.statusText;b.status = this.status;b.meta && (b.metaString = JSON.stringify(b.meta));f(b);},
      onload: function () {var a = JSON.parse(this.responseText);if (a && a.meta && (a.metaString = JSON.stringify(a.meta), a.meta.session_id)) {var c = a.meta.session_id;b.js.sdk.utils.setCookie(b.constants.sessionId, c);h.session_id = c;}f(a);}, securityManager: b.js.sdk.utils.securityManager }),j = a;if (e.toUpperCase() == b.constants.get_method || e.toUpperCase() == b.constants.delete_method) {var n = "",q;for (q in c) c.hasOwnProperty(q) && (n += "&" + q + "=" + d.percentEncode(c[q]));0 < n.length && (j = 0 < a.indexOf("?") ? j + n : j + ("?" + n.substring(1)), c =
      {});}l.debug && (Ti.API.info(e + ": " + j), Ti.API.info("header: " + JSON.stringify(g)), Ti.API.info("data: " + JSON.stringify(c)));i.open(e, j);"mobileweb" != Ti.Platform.osname && i.setRequestHeader("Accept-Encoding", "gzip,deflate");if (g) for (q in g) g.hasOwnProperty(q) && i.setRequestHeader(q, g[q]);i.send(c);};b.js.sdk.utils.decodeQS = function (a) {var b = decodeURIComponent,c = {},a = a.split("&"),d,f;for (d = 0; d < a.length; d++) (f = a[d].split("=", 2)) && f[0] && (c[b(f[0])] = b(f[1]));return c;};b.js.sdk.utils.guid = function () {return "f" +
    (1073741824 * Math.random()).toString(16).replace(".", "");};b.js.sdk.utils.copy = function (a, b, c, d) {for (var f in b) if (c || "undefined" === typeof a[f]) a[f] = d ? d(b[f]) : b[f];return a;};b.js.sdk.utils.setSecurityManager = function (a) {b.js.sdk.utils.securityManager = a;};var h = { session: null, fetchSetting: function (a, b) {var c,d = "production" == Ti.App.deployType.toLowerCase() ? "production" : "development";return (c = Ti.App.Properties.getString(a + "-" + d)) && "undefined" != c || (c = Ti.App.Properties.getString(a)) && "undefined" != c ? c : b;}, fetchSession: function () {var a =
      h.fetchSetting("acs-api-key", null),e = h.fetchSetting("acs-base-url", b.sdk.url.baseURL),c = h.fetchSetting("acs-authbase-url", b.sdk.url.authBaseURL),d = h.fetchSetting("acs-oauth-key", null),f = h.fetchSetting("acs-oauth-secret", null);return new n(a, d, f, e, c);} };h.getSession = function () {null == h.session && (h.session = h.fetchSession());return h.session;};h.send = function (a, b, c, d) {h.getSession().sendRequest(a, b, c, d);};h.hasStoredSession = function () {return !!b.js.sdk.utils.getCookie(b.constants.sessionId);};h.retrieveStoredSession =
  function () {return b.js.sdk.utils.getCookie(b.constants.sessionId);};h.reset = function () {b.js.sdk.utils.deleteCookie(b.constants.sessionId);h.session && (h.session.clearSession(), h.session = null);};h.secureSend = function (a, b) {var c = h.getSession();c.useThreeLegged(!0);"secureCreate" === a ? c.signUpRequest(b) : "secureLogin" === a && c.sendAuthRequest(b);};h.checkStatus = function () {return h.getSession().checkStatus();};b.js.sdk.UIManager = { redirect_uri: "acsconnect://success", displayModal: function (a) {function e(a) {var j =
        /^acsconnect:\/\/([^#]*)#(.*)/.exec(decodeURIComponent(a.url));if (j && 3 == j.length) {var l = null;if ("success" == j[1]) l = b.js.sdk.utils.decodeQS(j[2]);else if ("cancel" != j[1]) return;f.removeEventListener("beforeload", e);f.removeEventListener("load", e);i = l;null != c ? c.close() : d && d.close();}h && "load" == a.type && (d.remove(h), h = null);}l.debug && Ti.API.info("ThreeLegged Request url: " + a.url);var c = null,d = Ti.UI.createWindow({ fullscreen: !1, title: a.params.title || "Appcelerator Cloud Service" }),f = Ti.UI.createWebView({ url: a.url,
        scalesPageToFit: !1, showScrollbars: !0 }),h = Ti.UI.createLabel({ text: "Loading, please wait...", color: "black", width: Ti.UI.SIZE || "auto", height: Ti.UI.SIZE || "auto", zIndex: 100 }),i;f.addEventListener("beforeload", e);f.addEventListener("load", e);d.addEventListener("close", function () {a && (a.cb && a.cb(i), f = d = h = a = i = null);});if ("android" != Ti.Platform.osname) {var j = Ti.UI.createButton({ title: "close", width: "50%", height: "20%" });j.addEventListener("click", function () {c.close();});d.rightNavButton = j;if ("iphone" == Ti.Platform.osname ||
        "ios" == Ti.Platform.osname) c = Ti.UI.iOS.createNavigationWindow({ window: d });}d.add(f);d.add(h);null != c ? c.open({ modal: !0 }) : d.open();}, processParams: function (a, d) {return { cb: d, url: a.url + b.constants.redirectUriParam + b.js.sdk.UIManager.redirect_uri, params: a };} };b.js.sdk.ui = function (a, d) {if ("mobileweb" === Ti.Platform.osname) alert("Three Legged OAuth is not currently supported on MobileWeb");else if (a.action) {var c = b.js.sdk.UIManager.processParams(a, d);c && b.js.sdk.UIManager.displayModal(c);} else alert('"action" is a required parameter for com.cocoafish.js.sdk.ui().');};
  return l;};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
